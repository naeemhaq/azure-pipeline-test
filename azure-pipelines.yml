# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

variables:
  # define b as a counter with the prefix as variable a, and seed as 10.
- name: minor1
  value:  $[counter(variables['major1'], 10)]
- name: sic-version
  value: $(minor1)

steps:
- script: |
    echo $(minor1)
    echo $(major1)
    echo $(sic-version)
    echo '---------------'
  displayName: 'Minor version'

- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      $armOutput = @'
      {
          "sqlServerName": {
      	    "value" : "[some sql server name].database.windows.net",
              "type": "string"
          },
          "databaseName": {
      		"value" : "[some sql db name]",
              "type": "string"
          }
      }
      '@
      write-host "received: $($armOutput)"
      $armOutputObj = $armOutput | convertfrom-json
      Write-Host $armOutpuObj
      $armOutputObj.PSObject.Properties | ForEach-Object {
          $keyname = $_.Name
          $value = $_.Value.value
          ## Creates a standard pipeline variable
          Write-Output "##vso[task.setvariable variable=$keyName;]$value"
      		
          ## Creates an output variable
          Write-Output "##vso[task.setvariable variable=$keyName;isOutput=true]$value"
          Write-Host "##vso[task.setvariable variable=test;]testvalue"
      }

- script: |
    echo "sqlServerName is $(sqlServerName)"
    echo "databaseName from variable $(databaseName)" 
    echo "$(System.AccessToken)"

- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      $putUrl = "$($env:SYSTEM_TEAMFOUNDATIONCOLLECTIONURI)$env:SYSTEM_TEAMPROJECTID/_apis/distributedtask/variablegroups/5?api-version=5.1-preview.1"
      $url = "$($env:SYSTEM_TEAMFOUNDATIONCOLLECTIONURI)$env:SYSTEM_TEAMPROJECTID/_apis/distributedtask/variablegroups?groupName=naeem-gluu2&api-version=6.1-preview.2"
              Write-Host "URL: $url"
              $authHeader = @{Authorization = "Bearer $(System.AccessToken)"}

              Write-Host "system token: $(System.AccessToken)"
              $pipeline = Invoke-RestMethod -Uri $url -Headers $authHeader

              Write-Host "Pipeline = $($pipeline | ConvertTo-Json -Depth 100)"
              Write-Host $pipeline.value
              # Update an existing variable named cb_host to its new value 1035
              $pipeline.value.variables.cb_host.Value = "1035"

              ####****************** update the modified object **************************
              $json = @($pipeline) | ConvertTo-Json -Depth 99
              Write-Host $json
              $updatedef = Invoke-RestMethod -Method Put -Uri $putUrl -Headers $authHeader -ContentType "application/json" -Body ([System.Text.Encoding]::UTF8.GetBytes($json))
              write-host "==========================================================" 
              Write-host "The value of Varialbe 'cb_host' is updated to" $updatedef.value.variables.v1030.value
              write-host "=========================================================="

#https://cloudarchitected.com/2019/10/updating-variable-groups-from-an-azure-devops-pipeline/
# https://developercommunity.visualstudio.com/content/problem/639518/update-single-variable-in-variable-group-which-has.html
- bash: |
     baseUri="https://dev.azure.com/info0606/info/_apis/distributedtask/variablegroups/5?api-version=6.1-preview.2"
     curl -fL -X PUT $baseUri -H "Authorization:Bearer $(System.AccessToken)" -H "Content-Type:application/json" \
     -d '{
        "variables": {
          "cb_host": {
            "value": "1035"
            }
        },
        "id": 5,
        "type": "Vsts",
        "name": "naeem-gluu2",
        "description": "",
        "createdBy": {
          "displayName": "info",
          "id": "38b98ff9-0d29-60ed-a97a-5f5228bc4007",
          "uniqueName": "info@nqtech.ca"
        },
        "createdOn": "2021-01-14T18:33:48.12Z",
        "modifiedBy": {
          "displayName": "info",
          "id": "38b98ff9-0d29-60ed-a97a-5f5228bc4007",
          "uniqueName": "info@nqtech.ca"
        },
        "modifiedOn": "2021-01-15T12:56:47.68Z",
        "isShared": false,
        "variableGroupProjectReferences": null
      }'
  displayName: 'Set variable in variable group to current foo'

